{% if IsFetch or IsAurelia -%}
{% if WrapResponses -%}
if(responseWrapperClass) {
    return Promise.resolve<T>(new responseWrapperClass(status, _headers, <any>null));
}
{% endif -%}
return Promise.resolve<T>(<any>null);
{% elseif IsAngular -%}
{% if WrapResponses -%}
if(responseWrapperClass) {
    return Observable.of<T>(new responseWrapperClass(status, _headers, <any>null));
}
{% endif -%}
return Observable.of<T>(<any>null);
{% elseif IsAngularJS -%}
{% if WrapResponses -%}
if(responseWrapperClass) {
    return q.resolve<T>(new responseWrapperClass(status, _headers, <any>null));
}
{% endif -%}
return q.resolve<T>(<any>null);
{% else -%}
{% if WrapResponses -%}
if(responseWrapperClass) {
    return new responseWrapperClass(status, _headers, <any>null);
}
{% endif -%}
return null;
{% endif -%}